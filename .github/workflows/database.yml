name: Database Migration

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/db/migration/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/db/migration/**'
  workflow_dispatch:

jobs:
  migrate:
    name: Run Flyway Migrations
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install Flyway CLI
      run: |
        wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.22.3/flyway-commandline-9.22.3-linux-x64.tar.gz | tar xvz
        sudo mv flyway-9.22.3 /opt/flyway
        sudo ln -s /opt/flyway/flyway /usr/local/bin/flyway
        
    - name: Run Database Migrations
      working-directory: ./backend/db
      env:
        FLYWAY_URL: ${{ secrets.FLYWAY_URL }}
        FLYWAY_USER: ${{ secrets.FLYWAY_USER }}
        FLYWAY_PASSWORD: ${{ secrets.FLYWAY_PASSWORD }}
      run: |
        # Create a temporary flyway.conf file with secrets
        echo "flyway.url=${FLYWAY_URL}" > flyway-ci.conf
        echo "flyway.user=${FLYWAY_USER}" >> flyway-ci.conf
        echo "flyway.password=${FLYWAY_PASSWORD}" >> flyway-ci.conf
        echo "flyway.locations=filesystem:migration" >> flyway-ci.conf
        
        # Run migrations with the temporary config file
        flyway -configFiles=flyway-ci.conf info
        
        # Only apply migrations on main branch or manual workflow runs
        if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          flyway -configFiles=flyway-ci.conf migrate
        fi
        
        # Clean up
        rm flyway-ci.conf
